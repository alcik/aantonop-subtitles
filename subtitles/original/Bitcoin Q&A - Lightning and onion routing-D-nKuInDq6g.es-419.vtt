WEBVTT
Kind: captions
Language: es-419

00:00:00.220 --> 00:00:03.620
La primera pregunta fue de un patreon anónimo..

00:00:04.400 --> 00:00:08.960
Cuan confiado estas de que "lightning network" traerá la escalabilidad deseada..

00:00:09.080 --> 00:00:12.280
y seguridad a la red? Gracias.

00:00:13.700 --> 00:00:16.140
Estoy muy confiado!

00:00:16.940 --> 00:00:20.180
Y no solo estoy confiado de que podremos alcanzar..

00:00:20.500 --> 00:00:22.700
escalabilidad tremenda con lightning network..

00:00:23.780 --> 00:00:27.740
pero pienso que podremos lograr eso en una forma libre de escalas..

00:00:28.700 --> 00:00:30.700
y también obtendremos..

00:00:31.020 --> 00:00:34.240
mucha mejor seguridad y privacidad, asi que, a que me refiero con esto?

00:00:35.840 --> 00:00:38.400
Creo que vamos a ver lightning networks

00:00:39.340 --> 00:00:41.340
Operando..

00:00:42.040 --> 00:00:44.200
ya sea antes de fin de año (2017) o..

00:00:45.060 --> 00:00:48.980
o estoy muy seguro tempranamente en el comienzo de 2018..

00:00:49.240 --> 00:00:52.740
Yo ya he estado corriendo software beta de testeo..

00:00:54.220 --> 00:00:57.000
de ambos...la..

00:00:57.280 --> 00:01:00.940
variedad "LND" que es la lightning network daemon ..

00:01:01.100 --> 00:01:03.920
hecha por la compañía Lightning Network..

00:01:04.100 --> 00:01:07.140
pero hay un numero de implementaciones..

00:01:07.300 --> 00:01:11.080
la mayoría de las personas mal entienden y piensan que Lightning Network es una compañía..

00:01:11.240 --> 00:01:13.800
..hay una compañía que se llama Lightning Network..

00:01:13.940 --> 00:01:16.700
asi como también hay una compañía que se llama Blockchain pero..

00:01:16.840 --> 00:01:19.460
eso no significa que esa es la compañía que hace la blockchain..

00:01:19.680 --> 00:01:22.240
asi como no significa que esa sea la compañía que hace la Lightning Network..

00:01:22.420 --> 00:01:26.420
Emm..hay 1 implementacion hecha por la compañía Lightning Network..

00:01:26.500 --> 00:01:28.500
Tu sabes..esa es...

00:01:28.600 --> 00:01:31.120
la compañía que comenzó todo esto..pero..

00:01:31.720 --> 00:01:34.040
la especificación para el protocolo es de código abierto..

00:01:34.280 --> 00:01:36.280
y no solo es código abierto, sino que también..

00:01:36.280 --> 00:01:37.680
hace cerca de 1 año atrás..

00:01:38.580 --> 00:01:41.580
los distintos grupos de ..

00:01:41.740 --> 00:01:43.960
de ambos, compañías y proyectos de código abierto..

00:01:43.960 --> 00:01:45.580
que estaban involucrados en lightning se juntaron..

00:01:45.760 --> 00:01:49.620
y construyeron una serie de estandartes comunes de inter-operabilidad..

00:01:49.820 --> 00:01:51.820
y estos estandartes..

00:01:51.820 --> 00:01:53.660
son llamados..

00:01:53.660 --> 00:01:54.560
"Volt"..

00:01:55.480 --> 00:01:59.720
"Volt" es la base de la tecnologia lightning..

00:01:59.960 --> 00:02:05.080
todos estos juegos de palabras que puedes hacer sobre el tiempo, las nubes, rayos y truenos..

00:02:05.200 --> 00:02:08.860
y todo eso, la gente realmente le sacaron el jugo a esta metáfora..

00:02:09.320 --> 00:02:11.320
asi que, volt es una serie de estandartes..

00:02:11.540 --> 00:02:16.120
y estos definen, como las diferentes implementaciones..

00:02:17.020 --> 00:02:19.020
van a inter-operar..

00:02:19.820 --> 00:02:25.000
creo que hay 12 documentos de volt, pueden encontrarlos en GitHub..

00:02:25.000 --> 00:02:27.000
son parte de un rfc..

00:02:28.060 --> 00:02:30.060
y son..

00:02:30.560 --> 00:02:34.000
basicamente el estandarte de inter-operabilidad..

00:02:34.280 --> 00:02:39.540
y los 6 equipos diferentes que están trabajando en las implementaciónes de la lightning network..

00:02:39.720 --> 00:02:42.660
que incluyen la compañía de Lightning Network, incluye..

00:02:43.060 --> 00:02:45.060
blockstream que esta haciendo "C Lightning"

00:02:45.260 --> 00:02:49.360
incluye "ACINQ" que están haciendo "eclair" que es..

00:02:50.100 --> 00:02:52.660
una compañía francesa..

00:02:54.000 --> 00:02:57.760
esos 3 están mas prominentemente involucrados en el testeo de inter-operabilidad..

00:02:57.960 --> 00:02:58.820
pero hay..

00:02:59.220 --> 00:03:04.900
3 compañías mas que están trabajando en implementaciones en una variedad de diferentes lenguajes..

00:03:05.420 --> 00:03:08.600
y estos equipos totalmente independientes trabajando en ..

00:03:08.920 --> 00:03:12.000
todos proyectos de código abierto, todos son de código abierto..

00:03:12.100 --> 00:03:13.040
y todos..

00:03:13.600 --> 00:03:16.560
trabajando en los mismo estándares de inter-operabilidad..

00:03:17.140 --> 00:03:21.180
durante el ultimo mes observe ..

00:03:21.900 --> 00:03:24.500
las 3 compañías que tienen la mas avanzada..

00:03:24.740 --> 00:03:27.560
implementation hasta ahora, que están muy cerca de..

00:03:27.820 --> 00:03:29.820
alcanzar capabilidad de producción..

00:03:30.060 --> 00:03:33.240
han estado haciendo testeo de inter-operabilidad y la semana pasada..

00:03:33.560 --> 00:03:39.000
las 3 compañías pudieron pasar todas las 75 pruebas de compatibilidad..

00:03:39.300 --> 00:03:43.200
lo que significa que utilizar cualquiera de las 3 implementaciones ..

00:03:43.720 --> 00:03:45.340
permitiria..

00:03:45.900 --> 00:03:50.400
te permitiria que trabajes como parte de la lightning network..

00:03:50.740 --> 00:03:52.740
y lo que eso significa es que no importa que cliente tengas..

00:03:52.920 --> 00:03:56.480
asi como no importa que billetera de bitcoin tengas para utilizar bitcoin..

00:03:56.660 --> 00:04:00.440
no importa que cliente tengas para utilizar lightning network..

00:04:00.440 --> 00:04:02.400
mientras que sea inter-operable..

00:04:02.780 --> 00:04:07.100
y podrá abrir canales de pago con cualquier otro..

00:04:07.320 --> 00:04:10.880
cualquiera de los otros clientes podrán rutear pagos a traves de canales multiples..

00:04:11.040 --> 00:04:15.160
y hacer eso con un grado muy alto de privacidad..

00:04:15.320 --> 00:04:18.860
Todos están implementando el protocolo "onion routing"..

00:04:19.100 --> 00:04:21.100
y lo que "onion routing" significa es que..

00:04:22.100 --> 00:04:24.100
cada nodo solo ve..

00:04:24.380 --> 00:04:26.900
el hop inmediato anterior..

00:04:27.280 --> 00:04:30.540
y el hop inmediato posterior..

00:04:31.140 --> 00:04:36.540
la razón por la cual se llama "onion routing" es por que la información enrutada esta envuelta en capas..

00:04:36.980 --> 00:04:41.900
asi que recibes un paquete encriptado del nodo inmediatamente previamente..

00:04:42.380 --> 00:04:44.780
a ti y no sabes donde el mismo esta yendo..

00:04:45.160 --> 00:04:47.560
y el nodo anterior a ti tampoco sabe donde esta yendo..

00:04:48.040 --> 00:04:50.040
y lo desenvuelves..

00:04:50.380 --> 00:04:53.520
y encuentras información enrutada en su interior que te dice donde..

00:04:53.840 --> 00:04:57.280
ir para el proximo hop, pero no sabes nada mas que eso..

00:04:57.440 --> 00:04:59.440
y luego lo envias a ese proximo hop..

00:04:59.700 --> 00:05:03.720
ellos lo abren, y encuentran información enrutada para enviarla al proximo hop..

00:05:04.420 --> 00:05:05.320
cada..

00:05:05.320 --> 00:05:06.740
Nodo..

00:05:06.740 --> 00:05:08.140
en esta ruta..

00:05:08.140 --> 00:05:09.860
no sabe..

00:05:09.860 --> 00:05:11.240
cuantos hops..

00:05:11.240 --> 00:05:12.680
han pasado..

00:05:12.680 --> 00:05:14.280
y no sabe cuantos hops..

00:05:14.280 --> 00:05:15.980
aun van a venir..

00:05:15.980 --> 00:05:17.340
de hecho..

00:05:17.540 --> 00:05:19.540
las rutas son siempre del mismo largo..

00:05:20.220 --> 00:05:21.260
asi que..

00:05:21.720 --> 00:05:23.720
no puedes saber si eres el primero..

00:05:23.720 --> 00:05:25.620
o el veinteavo..

00:05:26.080 --> 00:05:28.640
en una red de 20 hops..

00:05:28.680 --> 00:05:30.680
asi que los caminos pueden ser hasta 20 hops de largo..

00:05:31.020 --> 00:05:34.440
y siempre aparentan ser de 20 hops asi que..

00:05:35.420 --> 00:05:36.380
Emm..

00:05:36.840 --> 00:05:42.060
si la ruta de información con menos de 20 hops esta acolchada con basura..

00:05:42.160 --> 00:05:44.160
que esta encriptada, que no sabes que es basura

00:05:44.380 --> 00:05:47.300
simplemente la pasas pensando que es información enrutada para el proximo nodo..

00:05:47.600 --> 00:05:50.300
hasta que uno de los nodos abren el paquete..

00:05:50.540 --> 00:05:53.300
y se da cuenta que es en realidad el destinatario..

00:05:53.300 --> 00:05:54.880
de esa ruta..

00:05:55.120 --> 00:06:00.340
y las otras 19 direcciones que siguen son en realidad basura y las desecha..

00:06:00.640 --> 00:06:05.260
pero solo ese nodo sabe que es el ultimo en el hub, asi que solo el que envia..

00:06:05.540 --> 00:06:07.540
y el que recibe, saben que tan larga es la ruta..

00:06:07.800 --> 00:06:11.600
solo el que envia y el que recibe saben en que posición están en la ruta..

00:06:11.900 --> 00:06:17.260
y todos los demás en el medio están simplemente pasando este conjunto de información encriptada..

00:06:17.940 --> 00:06:22.300
esto es un protocolo de muy alta seguridad..es el mismo protocolo que se utiliza en TOR..

00:06:22.300 --> 00:06:23.360
si has escuchado de TOR..

00:06:23.800 --> 00:06:25.800
TOR significa ..

00:06:25.980 --> 00:06:27.980
"the onion router"..

00:06:28.180 --> 00:06:30.560
y hace esta forma de enrolamiento llamada "onion routing"..

00:06:30.840 --> 00:06:35.040
asi que la implementación inicial de lightning network utilizara "onion routing"..

00:06:35.540 --> 00:06:37.620
para brindar un alto grado de privacidad..

00:06:39.020 --> 00:06:42.340
Una de las preguntas que permanecen es..

00:06:42.560 --> 00:06:46.840
Lightning se volvera centralizada? Existen incentivos particulares ...

00:06:47.160 --> 00:06:49.540
para correr un hub..

00:06:49.760 --> 00:06:53.560
para correr un nodo que este conectado con muchos otros canales de pagos y muchos otros nodos..

00:06:53.800 --> 00:06:56.840
y que se utiliza para muchas de las rutas?

00:06:57.100 --> 00:07:01.000
Y, es posible que gente con mucho dinero..

00:07:01.540 --> 00:07:03.540
por ejemplo, exchanges..

00:07:03.540 --> 00:07:05.200
armen nodos de lightning..

00:07:05.420 --> 00:07:09.820
que sean esencialmente los participantes principales en una lightning network..

00:07:10.040 --> 00:07:15.060
y terminemos con un sistema de "hub and spoke" donde hay un montón de concentración y centralización?

00:07:16.100 --> 00:07:19.380
Yo pienso que es poco probable que eso suceda, y hay una serie de razones..

00:07:19.380 --> 00:07:21.320
Primero que nada si estas corriendo un nodo de lightning ..

00:07:21.520 --> 00:07:26.840
y organizas canales de pagos, para que efectivamente puedas enrutar y hacer pagos, tienes que tener las llaves..

00:07:27.600 --> 00:07:30.580
en linea en ese sistema...mientras mas..

00:07:31.220 --> 00:07:36.080
fondos pongas en esos canales de pago, mas alto el riesgo de de que tu nodo..

00:07:36.820 --> 00:07:39.940
se vuelva un objetivo para ser hackeado..

00:07:41.480 --> 00:07:46.360
Asi que hay una desventaja en tener..

00:07:46.880 --> 00:07:48.880
un nodo con muchos fondos..

00:07:49.180 --> 00:07:53.240
y si abres muchos canales de pagos para hacer mucho enrutamiento..

00:07:53.340 --> 00:07:56.020
tienes que poner bastante dinero en esos canales de pago..

00:07:56.600 --> 00:08:01.360
En cambio, si cada nodo abre 4-5 diferentes rutas..

00:08:02.160 --> 00:08:04.840
y entre todos terminan creando esta ..

00:08:04.840 --> 00:08:06.840
estructura inter-conectada..

00:08:07.240 --> 00:08:11.180
donde es de par-a-par y no hay mucha centralización..

00:08:11.400 --> 00:08:14.800
en realidad ese es el mejor modelo para esto, y es por eso que se llama una red sin escalas..

00:08:14.800 --> 00:08:15.900
que significa que ..

00:08:16.020 --> 00:08:18.020
Se ve de igual manera en cualquier escala..

00:08:19.120 --> 00:08:22.600
y como resultado, una red como esa..

00:08:22.860 --> 00:08:26.820
no tiene una tendencia a centralización..

00:08:27.100 --> 00:08:31.340
hay buenas razones por las cuales la centralizacion es des-motivada..

00:08:31.700 --> 00:08:34.100
Ahora, una de las cosas realmente interesantes es que ..

00:08:34.300 --> 00:08:38.840
la lightning network como esta ahora mismo con la especificación actual de volt..

00:08:39.700 --> 00:08:43.920
esta implementando varias técnicas para re-balancear canales..

00:08:44.080 --> 00:08:46.600
lo que significa que si continuamente envías en un canal..

00:08:46.780 --> 00:08:49.900
todos los fondos terminaran en el final del canal y luego..

00:08:50.060 --> 00:08:53.900
para poder re-balancearlo necesitas enrutar pagos en la dirección opuesta..

00:08:54.760 --> 00:08:56.760
y hacen eso automaticamente..

00:08:58.860 --> 00:09:01.600
He mirado al lightning network daemon..

00:09:01.780 --> 00:09:05.700
y una de las cosas que me gusta mucho es que tienen un mecanismo...

00:09:06.620 --> 00:09:08.620
para automaticamente..

00:09:08.780 --> 00:09:13.060
administrar canales, asi que no tienes que pensar sobre tu nodo..

00:09:13.240 --> 00:09:15.860
que podría estar corriendo en tu telefono inteligente..

00:09:15.860 --> 00:09:17.680
puedes correr un nodo lightning network completo..

00:09:18.020 --> 00:09:21.640
en tu telefono inteligente, o en tu laptop, o en tu computadora de escritorio..

00:09:21.920 --> 00:09:24.560
No necesitas preocuparte sobre que canales necesita abrir..

00:09:25.020 --> 00:09:27.020
Basicamente, administra canales por su cuenta..

00:09:27.160 --> 00:09:32.220
abre canales a partes que considera que te darán buena conectividad en la red..

00:09:32.480 --> 00:09:35.200
en la misma manera que tu nodo de bitcoin..

00:09:35.720 --> 00:09:40.040
hace conexiones con otros 8 nodos para mantener buena conectividad..

00:09:40.720 --> 00:09:43.340
Asi que, la ventaja de eso es que..

00:09:44.160 --> 00:09:46.060
Esta diseñado para automaticamente administrar canales..

00:09:46.240 --> 00:09:50.180
de tal manera que no cree un entorno centralizado..

