WEBVTT
Kind: captions
Language: ru

00:00:00.000 --> 00:00:03.440
Первый вопрос был от  анонимного патрона.

00:00:03.480 --> 00:00:11.300
Насколько вы уверены, что Lighting сети добавят желаемого масштабирования и безопасность сети?

00:00:11.300 --> 00:00:13.300
Спасибо.

00:00:13.300 --> 00:00:22.940
Я очень уверен. И я не только уверен, что мы сможем достигнуть потрясающего масштабирования с Lighting сетями.

00:00:23.380 --> 00:00:28.100
Но я также думаю, что мы сможем достигнуть этого в свободно масштабируемом виде.

00:00:28.420 --> 00:00:33.200
И также мы получим намного лучшую безопасность и анонимность.

00:00:33.620 --> 00:00:35.840
Что я имею в виду под этим?

00:00:36.200 --> 00:00:49.040
Я думаю мы увидим работающие  Lighting сети или до конца года или достаточно скоро после начала 2018 года

00:00:49.300 --> 00:00:53.080
Я уже запускал Бета версии программного обеспечения

00:00:53.500 --> 00:01:00.640
Версию  LND - Lightning Network Daemon

00:01:01.600 --> 00:01:04.680
Выпущенный Lighting Network Company

00:01:04.680 --> 00:01:07.980
Но есть некоторое количество вариаций.

00:01:07.980 --> 00:01:10.840
Большинство людей неправильно понимают и думают, что Lighting network это одна компания.

00:01:10.840 --> 00:01:14.300
Есть такая компания Lighting Network

00:01:14.300 --> 00:01:16.300
Также как есть и компания называющаяся Blockhain.

00:01:16.300 --> 00:01:19.200
Но это не означает, что это компания производит Blockchain.

00:01:19.200 --> 00:01:22.080
Также это и не значит, что это компания производит Lighting Network.

00:01:22.480 --> 00:01:26.680
Есть одна разновидность реализации от Lighting Network Company.

00:01:27.460 --> 00:01:30.420
Эта компания начала эту разработку.

00:01:30.680 --> 00:01:34.060
Но спецификация протокола находится в открытом виде.

00:01:34.280 --> 00:01:36.480
И не только то, что она находится в открытом виде.

00:01:36.480 --> 00:01:38.380
Но и год назад

00:01:38.660 --> 00:01:42.200
Различные группы, компании и проекты с открытым исходным кодом

00:01:42.560 --> 00:01:45.760
которые были вовлечены в Lighting

00:01:45.980 --> 00:01:48.640
собрались и создали стандарты совместной работы.

00:01:48.860 --> 00:01:51.160
И эти стандарты

00:01:51.380 --> 00:01:55.320
были названы BOLT

00:01:55.860 --> 00:01:59.980
BOLT - это основы Lighting технологии.

00:02:00.280 --> 00:02:04.220
И все эти игры слов которые вы можете придумать о погоде и облаках

00:02:04.440 --> 00:02:07.180
И об ударе молнии и о громе и всем таком.

00:02:07.440 --> 00:02:09.500
Так что люди выдумывают разные метафоры.

00:02:09.840 --> 00:02:12.040
Итак BOLT - это набор стандартов

00:02:12.380 --> 00:02:14.380
и они определяют как разные

00:02:14.680 --> 00:02:16.680
реализации

00:02:16.680 --> 00:02:18.680
будут взаймодействовать

00:02:19.240 --> 00:02:23.840
И я думаю существуют 12 описаний BOLT

00:02:24.100 --> 00:02:26.100
Вы можете найти их на Github

00:02:26.100 --> 00:02:28.100
Они часть RFC (запрос на изменение)

00:02:28.780 --> 00:02:33.140
и они в основе своей являются стандартами взаймодействия

00:02:33.520 --> 00:02:37.320
и 6 разных команд, которые работают над применением

00:02:37.680 --> 00:02:39.220
Lighting Network

00:02:39.460 --> 00:02:42.360
в которые входят Lighting Network Company

00:02:42.640 --> 00:02:45.200
также туда входит Blockstream, которая разрабатывает C-Lighting

00:02:45.200 --> 00:02:48.540
еще Async Lighting разрабатываемый Eclair -

00:02:49.040 --> 00:02:52.340
которая является французской компанией работающей над Lighting

00:02:53.360 --> 00:02:57.140
Эти три компании наиболее вовлечены в тестирование взаймодействия

00:02:58.900 --> 00:03:01.500
Но есть еще 3 компании

00:03:01.860 --> 00:03:04.520
которые работают над разработкой

00:03:04.520 --> 00:03:06.520
технологии Lighting в разных языках программирования

00:03:06.780 --> 00:03:08.780
И это совершенно независимые команды

00:03:09.000 --> 00:03:11.000
работающие на проектах с открытым исходным кодом

00:03:11.000 --> 00:03:13.000
все эти проекты имеют открытый исходный код

00:03:13.300 --> 00:03:15.780
они работают под одному и тому же стандарту взаймодействия

00:03:16.200 --> 00:03:19.120
в течении последнего месяца или около того

00:03:19.480 --> 00:03:22.440
я видел как 3 компании

00:03:22.540 --> 00:03:25.860
имеющие наиболее разработанные варианты применения на текущий момент

00:03:26.200 --> 00:03:30.200
которые очень близки к рабочему (Production) варианту

00:03:30.320 --> 00:03:32.880
проводили тестирование взаймодействия

00:03:33.240 --> 00:03:35.040
и на прошлой неделе все 3 компании

00:03:35.320 --> 00:03:38.760
прошли все 75 тестов на совместимость

00:03:38.760 --> 00:03:41.540
это означает, что использование

00:03:41.540 --> 00:03:43.540
любой из 3 реализаций

00:03:44.100 --> 00:03:46.980
позволит

00:03:46.980 --> 00:03:50.440
позволит вам работать как часть Lighting Network

00:03:50.700 --> 00:03:53.320
и это означает, что не зависимо от того, какой клиент вы используете

00:03:53.620 --> 00:03:56.880
также как и не имеет значение какой Bitcoin кошелек вы имеете

00:03:56.880 --> 00:04:00.160
также не имеет значение какой клиент вы используете для Lighting Network

00:04:00.660 --> 00:04:04.500
если он поддерживает взаймодействие

00:04:04.700 --> 00:04:07.640
он сможет открывать платежный канал

00:04:07.640 --> 00:04:09.240
на любой другой клиент Lighting

00:04:09.460 --> 00:04:12.580
и сможет направлять платежи на множество каналов

00:04:12.920 --> 00:04:15.800
и сможет выполнять этой с большой степенью анонимности

00:04:15.800 --> 00:04:19.260
они все реализуют протокол многослойной маршрутизации(Onion network)

00:04:19.260 --> 00:04:21.260
многослойная маршрутизация означает

00:04:21.620 --> 00:04:23.840
каждая нода видит только

00:04:24.140 --> 00:04:26.860
непосредственный переход на нее с другой ноды

00:04:27.100 --> 00:04:30.140
и непосредственный переход после нее

00:04:31.560 --> 00:04:34.760
причина по который это называется многослойная маршрутизация (Onion Network)

00:04:34.760 --> 00:04:38.180
потому что информация о маршрутизации завязана на слои

00:04:38.180 --> 00:04:41.200
и вы получаете зашифрованный пакет

00:04:41.200 --> 00:04:43.200
от предыдущей ноды

00:04:43.200 --> 00:04:46.120
и вы не знаете куда пакет направлен

00:04:46.120 --> 00:04:48.120
также как и нода перед вами не знает куда он направлен

00:04:48.120 --> 00:04:50.120
и вы его раскрываете и

00:04:50.120 --> 00:04:52.760
и вы находите информацию о маршрутизации

00:04:52.760 --> 00:04:54.760
о том куда направить пакет далее

00:04:54.760 --> 00:04:56.760
но вы не знаете ничего кроме этого

00:04:56.760 --> 00:04:59.900
и вы направляете его к следующему переходу

00:04:59.900 --> 00:05:03.580
они его открывают и находят информацию для следущего перехода

00:05:03.860 --> 00:05:08.360
каждая нода в этом маршруте

00:05:08.360 --> 00:05:10.820
не знает как много переходов

00:05:11.340 --> 00:05:13.160
уже пройдено

00:05:13.160 --> 00:05:15.760
также как и не знает сколько еще прыжков будет

00:05:15.760 --> 00:05:19.760
на самом деле маршруты всегда одной длины

00:05:20.320 --> 00:05:25.840
и вы не знаете являетесь ли вы первым звеном или двадцатым

00:05:26.160 --> 00:05:28.720
и в сети с 20 переходами

00:05:28.800 --> 00:05:31.320
и так маршруты могут быть длиной до 20 переходов

00:05:31.320 --> 00:05:36.780
и они всегда выглядят как будто существует еще 20 переходов в сети

00:05:36.780 --> 00:05:41.740
и если переходов менее 20, оставшаяся часть маршрутной информации заполняется мусором

00:05:41.740 --> 00:05:43.800
который зашифрован, так что вы не знаете что это мусор

00:05:43.980 --> 00:05:48.040
так что вы просто передаете эту маршрутную информацию следующей ноде

00:05:48.040 --> 00:05:51.100
пока одна из нод не откроет пакет

00:05:51.100 --> 00:05:53.100
и выяснит, что она и является место назначения пакета

00:05:53.100 --> 00:05:55.520
по этому маршруту

00:05:55.720 --> 00:06:01.100
и что остальные 19 направлений это мусор и она отбрасывает их

00:06:01.100 --> 00:06:04.960
и только эта нода знает, что она последняя в маршруте

00:06:05.220 --> 00:06:08.960
и так только отправитель и получатель знают какой длины маршрут

00:06:08.960 --> 00:06:11.640
и только отправитель и получатель знают на каком месте они находятся в маршруте

00:06:11.900 --> 00:06:16.120
и все что между ними просто передают

00:06:16.120 --> 00:06:18.120
зашифрованный информационный пакет

00:06:18.120 --> 00:06:20.120
этот протокол имеет высокую степень безопасности

00:06:20.120 --> 00:06:22.120
тот же протокол используется в сети TOR

00:06:22.120 --> 00:06:24.120
если вы слышали про TOR

00:06:24.120 --> 00:06:26.120
TOR означает

00:06:26.120 --> 00:06:28.120
многослойная(луковая) маршрутизация

00:06:28.120 --> 00:06:30.500
он  выполняет эту форму маршрутизации называемой многослойная(луковая) маршрутизация

00:06:30.500 --> 00:06:33.860
и так первоначальное применение Lighting Network

00:06:33.860 --> 00:06:35.620
будет использовать многослойную маршрутизацию

00:06:35.620 --> 00:06:37.620
для очень высокой степени анонимности

00:06:38.560 --> 00:06:41.580
один из вопросов который остается

00:06:41.580 --> 00:06:44.260
будет ли сам Lighting централизованным

00:06:44.480 --> 00:06:47.060
есть ли особые стимулы

00:06:47.060 --> 00:06:49.840
размещать узел

00:06:49.840 --> 00:06:53.000
владеть нодой которая соединяется с множеством платежных каналов других нод

00:06:53.000 --> 00:06:56.820
и которая будет использоваться для множества маршрутов

00:06:56.820 --> 00:06:59.080
и возможно ли что

00:06:59.080 --> 00:07:02.520
люди с большими деньгами

00:07:02.520 --> 00:07:04.180
например криптовалютные биржи

00:07:04.380 --> 00:07:06.520
будут устанавливать Lighting ноды

00:07:06.520 --> 00:07:09.780
которые фактически будут основными участниками Lighting Network

00:07:09.780 --> 00:07:12.760
и вы получите такую веерную сеть

00:07:12.760 --> 00:07:14.760
в которой присутствует сильная концентрация и централизация

00:07:14.760 --> 00:07:17.660
я думаю это маловероятно

00:07:17.660 --> 00:07:19.660
и на это есть много причин

00:07:19.660 --> 00:07:21.660
Во первых если вы имеете рабочую Lighting ноду

00:07:21.660 --> 00:07:23.660
и вы устанавливаете платежные каналы

00:07:23.660 --> 00:07:25.660
чтобы участвовать в маршрутизации и осуществлять платежи

00:07:25.660 --> 00:07:29.200
вы должны держать приватные ключи онлайн на этой системе

00:07:29.200 --> 00:07:34.160
чем больше капитала вы размещаете на этих платежных каналах

00:07:34.160 --> 00:07:37.900
тем выше риск, что ваша нода

00:07:37.900 --> 00:07:41.700
будет являться целью хакеров

00:07:42.180 --> 00:07:48.240
и создаете себе неблагоприятные условия имея ноду с большим капиталом

00:07:48.240 --> 00:07:52.500
и если вы открываете множество платежных каналов

00:07:52.500 --> 00:07:55.140
для участия в маршрутизации, то вам будет необходимо размещать

00:07:55.300 --> 00:07:56.700
досточно много капитала на этих платежных каналах

00:07:56.700 --> 00:07:59.620
а если вместо этого каждая нода

00:07:59.840 --> 00:08:02.720
открывает например 4 или 5 разных маршрутов

00:08:02.720 --> 00:08:05.420
получится что они создадут

00:08:05.420 --> 00:08:08.600
достаточно плотную сеть

00:08:08.600 --> 00:08:10.600
с равноправными (peer-to-peer) узлами

00:08:10.600 --> 00:08:12.200
и с отсутсвием сильной централизации

00:08:12.440 --> 00:08:14.140
и это на самом деле лучшая модель

00:08:14.140 --> 00:08:16.140
это и называется свободно масштабируемая сеть

00:08:16.140 --> 00:08:18.140
она выглядит одинаково при любом масштабе

00:08:18.140 --> 00:08:20.300
и в результате

00:08:20.300 --> 00:08:22.300
такого рода сеть

00:08:22.300 --> 00:08:25.660
не имеет тендеции к централизации

00:08:25.940 --> 00:08:29.660
это хорошие причины

00:08:29.660 --> 00:08:33.040
по которым централизация не развивается

00:08:33.040 --> 00:08:35.040
одна из наиболее интересных вещей состоит в том

00:08:35.040 --> 00:08:37.040
текущая реализация Lighting Network

00:08:37.040 --> 00:08:39.040
с текущей спецификацией BOLT

00:08:39.040 --> 00:08:43.640
реализует разные техники для перебалансирования каналов

00:08:43.940 --> 00:08:47.260
что означает если вы постоянно отправляете пакет по одному каналу

00:08:47.540 --> 00:08:50.640
средства будут направлены на крайную часть канала

00:08:50.840 --> 00:08:52.360
и чтобы перебалансировать его

00:08:52.520 --> 00:08:55.080
вам нужно будет перенаправлять пакеты в противоположном направлении

00:08:55.280 --> 00:08:57.220
и это делается автоматически

00:08:57.220 --> 00:09:00.940
я изучал Lightning Network Daemon

00:09:00.940 --> 00:09:04.640
и одна из вещей, которая мне очень понравилась

00:09:04.880 --> 00:09:09.540
что у них есть механизм автоматического управления каналами

00:09:09.540 --> 00:09:13.380
и вам нет необходимости думать о ваших нодах

00:09:13.560 --> 00:09:16.060
которые могуть работать на вашем смартфоне

00:09:16.060 --> 00:09:18.060
вы можете держать полную Lighting Network ноду

00:09:18.060 --> 00:09:20.060
на вашем смартфоне или ноутбуке

00:09:20.060 --> 00:09:22.060
или на вашем настольном компьютере

00:09:22.060 --> 00:09:24.060
у вас нет необходимости переживать о том, какие каналы она должна открывать

00:09:24.060 --> 00:09:26.820
фактически нода сама управляет каналами

00:09:26.820 --> 00:09:31.160
она открывает каналы к участникам, которые как считает нода

00:09:31.160 --> 00:09:33.160
предоставят вам хорошее качество соединения с сетью

00:09:33.160 --> 00:09:37.760
также как и ваша Bitcoin нода получает соединение с 8 другими нодами

00:09:37.760 --> 00:09:39.760
для сохранения хорошего качества соединения

00:09:39.760 --> 00:09:42.920
преимуществом тут является то, что

00:09:42.920 --> 00:09:45.900
нода разработана для автоматического управления каналами

00:09:45.900 --> 00:09:49.860
для создания децентрализованной среды.

00:09:50.320 --> 00:09:52.320
 

